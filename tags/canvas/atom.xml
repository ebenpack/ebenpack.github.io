<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Eben Packwood - Canvas</title>
    <subtitle>TODO</subtitle>
    <link href="https://ebenpackwood.com/tags/canvas/atom.xml" rel="self" type="application/atom+xml"/>
    <link href="https://ebenpackwood.com"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2014-08-31T12:34:00+00:00</updated>
    <id>https://ebenpackwood.com/tags/canvas/atom.xml</id>
    <entry xml:lang="en">
        <title>Canvas Path Performance</title>
        <published>2014-08-31T12:34:00+00:00</published>
        <updated>2014-08-31T12:34:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://ebenpackwood.com/posts/canvas-path-performance.html/" type="text/html"/>
        <id>https://ebenpackwood.com/posts/canvas-path-performance.html/</id>
        
        <content type="html">&lt;p&gt;If you&#x27;ve done much work with the HTML5 canvas API, and especially if you&#x27;ve ever looked into performance tuning your
canvas apps, you&#x27;ve likely come across the advice to batch your canvas calls together. For example, you may have read
that when drawing multiple lines or shapes, it&#x27;s better to create a single path and only call your draw method once,
drawing all lines and shapes in one go, than it is to draw each line or shape individually. In other words, this:&lt;&#x2F;p&gt;
&lt;!--more--&gt;
&lt;pre data-linenos data-lang=&quot;js&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;ctx.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;beginPath&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;lineArray.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;forEach&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;line&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    ctx.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;moveTo&lt;&#x2F;span&gt;&lt;span&gt;(line.startx, line.starty);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    ctx.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;lineTo&lt;&#x2F;span&gt;&lt;span&gt;(line.endx, line.endy);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;});
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;6&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; Draw all lines at once.
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;7&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;ctx.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;stroke&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;8&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;ctx.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;closePath&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;is preferable to this:&lt;&#x2F;p&gt;
&lt;pre data-linenos data-lang=&quot;js&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt; lineArray.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;forEach&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;line&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    ctx.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;beginPath&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    ctx.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;moveTo&lt;&#x2F;span&gt;&lt;span&gt;(line.startx, line.starty);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    ctx.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;lineTo&lt;&#x2F;span&gt;&lt;span&gt;(line.endx, line.endy);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; Draw each line individually.
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;6&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    ctx.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;stroke&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;7&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    ctx.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;closePath&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;8&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;});
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As I recently discovered, however, this does not always hold true. Performance in certain browsers actually degrades
very quickly as the number of subpaths increases above a certain threshold. More information about how different
browsers perform can be found at this &lt;a href=&quot;http:&#x2F;&#x2F;jsperf.com&#x2F;canvas-path-performance&#x2F;2&quot;&gt;jsperf&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The following test method was used in order to obtain quantitative data to investigate this issue:&lt;&#x2F;p&gt;
&lt;pre data-linenos data-lang=&quot;html&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;&amp;lt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;DOCTYPE &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;html &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;en&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;charset&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;Long Path&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;6&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;7&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;8&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;canvas &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;canvas&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;width&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;600&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;height&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;600&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;canvas&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;9&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;script&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;10&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;        (&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span&gt;(){
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;11&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;canvas &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span&gt;.getElementById(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;#39;canvas&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;ctx &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;canvas.getContext(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;#39;2d&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;13&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;            ctx.strokeStyle &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;red&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;14&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;15&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;results &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[];
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;16&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;17&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; Draw increasingly long paths
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;18&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;; i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;2000&lt;&#x2F;span&gt;&lt;span&gt;; i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;19&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;                ctx.clearRect(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;600&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;600&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;20&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;start &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;performance.now();
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;21&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;                ctx.beginPath();
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;22&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;j&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;; j&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;i; j&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;23&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;                    ctx.moveTo(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, j);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;24&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;                    ctx.lineTo(j, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;25&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;                }
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;26&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;                ctx.stroke();
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;27&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;                ctx.closePath();
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;28&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;end &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;performance.now();
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;29&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;                results.push(end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;start);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;30&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;31&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;        })();
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;32&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;script&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;33&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;34&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;What this code is doing is drawing paths to the canvas with increasingly many subpaths. &lt;code&gt;performance.now()&lt;&#x2F;code&gt; was used to
measure execution time, as it provides higher resolution timestamps than &lt;code&gt;Date.now()&lt;&#x2F;code&gt;. Results were stored in an array,
which was used to produce the chart below.&lt;&#x2F;p&gt;
&lt;svg viewBox=&quot;0,0,1000,280&quot;&gt;
    &lt;g transform=&quot;translate(80,80)&quot;&gt;
        &lt;g class=&quot;x axis&quot; transform=&quot;translate(0,120)&quot;&gt;
            &lt;line class=&quot;tick minor&quot; y2=&quot;-120&quot; x2=&quot;0&quot; transform=&quot;translate(42,0)&quot; style=&quot;opacity: 1;&quot;&gt;&lt;&#x2F;line&gt;
            &lt;line class=&quot;tick minor&quot; y2=&quot;-120&quot; x2=&quot;0&quot; transform=&quot;translate(126,0)&quot; style=&quot;opacity: 1;&quot;&gt;&lt;&#x2F;line&gt;
            &lt;line class=&quot;tick minor&quot; y2=&quot;-120&quot; x2=&quot;0&quot; transform=&quot;translate(210,0)&quot; style=&quot;opacity: 1;&quot;&gt;&lt;&#x2F;line&gt;
            &lt;line class=&quot;tick minor&quot; y2=&quot;-120&quot; x2=&quot;0&quot; transform=&quot;translate(294,0)&quot; style=&quot;opacity: 1;&quot;&gt;&lt;&#x2F;line&gt;
            &lt;line class=&quot;tick minor&quot; y2=&quot;-120&quot; x2=&quot;0&quot; transform=&quot;translate(378,0)&quot; style=&quot;opacity: 1;&quot;&gt;&lt;&#x2F;line&gt;
            &lt;line class=&quot;tick minor&quot; y2=&quot;-120&quot; x2=&quot;0&quot; transform=&quot;translate(462.00000000000006,0)&quot; style=&quot;opacity: 1;&quot;&gt;&lt;&#x2F;line&gt;
            &lt;line class=&quot;tick minor&quot; y2=&quot;-120&quot; x2=&quot;0&quot; transform=&quot;translate(546,0)&quot; style=&quot;opacity: 1;&quot;&gt;&lt;&#x2F;line&gt;
            &lt;line class=&quot;tick minor&quot; y2=&quot;-120&quot; x2=&quot;0&quot; transform=&quot;translate(630,0)&quot; style=&quot;opacity: 1;&quot;&gt;&lt;&#x2F;line&gt;
            &lt;line class=&quot;tick minor&quot; y2=&quot;-120&quot; x2=&quot;0&quot; transform=&quot;translate(714,0)&quot; style=&quot;opacity: 1;&quot;&gt;&lt;&#x2F;line&gt;
            &lt;line class=&quot;tick minor&quot; y2=&quot;-120&quot; x2=&quot;0&quot; transform=&quot;translate(798,0)&quot; style=&quot;opacity: 1;&quot;&gt;&lt;&#x2F;line&gt;
            &lt;g transform=&quot;translate(0,0)&quot; style=&quot;opacity: 1;&quot;&gt;
                &lt;line class=&quot;tick&quot; y2=&quot;-120&quot; x2=&quot;0&quot;&gt;&lt;&#x2F;line&gt;
                &lt;text y=&quot;3&quot; x=&quot;0&quot; dy=&quot;.71em&quot; text-anchor=&quot;middle&quot;&gt;0&lt;&#x2F;text&gt;
            &lt;&#x2F;g&gt;
            &lt;g transform=&quot;translate(84,0)&quot; style=&quot;opacity: 1;&quot;&gt;
                &lt;line class=&quot;tick&quot; y2=&quot;-120&quot; x2=&quot;0&quot;&gt;&lt;&#x2F;line&gt;
                &lt;text y=&quot;3&quot; x=&quot;0&quot; dy=&quot;.71em&quot; text-anchor=&quot;middle&quot;&gt;200&lt;&#x2F;text&gt;
            &lt;&#x2F;g&gt;
            &lt;g transform=&quot;translate(168,0)&quot; style=&quot;opacity: 1;&quot;&gt;
                &lt;line class=&quot;tick&quot; y2=&quot;-120&quot; x2=&quot;0&quot;&gt;&lt;&#x2F;line&gt;
                &lt;text y=&quot;3&quot; x=&quot;0&quot; dy=&quot;.71em&quot; text-anchor=&quot;middle&quot;&gt;400&lt;&#x2F;text&gt;
            &lt;&#x2F;g&gt;
            &lt;g transform=&quot;translate(252,0)&quot; style=&quot;opacity: 1;&quot;&gt;
                &lt;line class=&quot;tick&quot; y2=&quot;-120&quot; x2=&quot;0&quot;&gt;&lt;&#x2F;line&gt;
                &lt;text y=&quot;3&quot; x=&quot;0&quot; dy=&quot;.71em&quot; text-anchor=&quot;middle&quot;&gt;600&lt;&#x2F;text&gt;
            &lt;&#x2F;g&gt;
            &lt;g transform=&quot;translate(336,0)&quot; style=&quot;opacity: 1;&quot;&gt;
                &lt;line class=&quot;tick&quot; y2=&quot;-120&quot; x2=&quot;0&quot;&gt;&lt;&#x2F;line&gt;
                &lt;text y=&quot;3&quot; x=&quot;0&quot; dy=&quot;.71em&quot; text-anchor=&quot;middle&quot;&gt;800&lt;&#x2F;text&gt;
            &lt;&#x2F;g&gt;
            &lt;g transform=&quot;translate(420,0)&quot; style=&quot;opacity: 1;&quot;&gt;
                &lt;line class=&quot;tick&quot; y2=&quot;-120&quot; x2=&quot;0&quot;&gt;&lt;&#x2F;line&gt;
                &lt;text y=&quot;3&quot; x=&quot;0&quot; dy=&quot;.71em&quot; text-anchor=&quot;middle&quot;&gt;1,000&lt;&#x2F;text&gt;
            &lt;&#x2F;g&gt;
            &lt;g transform=&quot;translate(504,0)&quot; style=&quot;opacity: 1;&quot;&gt;
                &lt;line class=&quot;tick&quot; y2=&quot;-120&quot; x2=&quot;0&quot;&gt;&lt;&#x2F;line&gt;
                &lt;text y=&quot;3&quot; x=&quot;0&quot; dy=&quot;.71em&quot; text-anchor=&quot;middle&quot;&gt;1,200&lt;&#x2F;text&gt;
            &lt;&#x2F;g&gt;
            &lt;g transform=&quot;translate(588,0)&quot; style=&quot;opacity: 1;&quot;&gt;
                &lt;line class=&quot;tick&quot; y2=&quot;-120&quot; x2=&quot;0&quot;&gt;&lt;&#x2F;line&gt;
                &lt;text y=&quot;3&quot; x=&quot;0&quot; dy=&quot;.71em&quot; text-anchor=&quot;middle&quot;&gt;1,400&lt;&#x2F;text&gt;
            &lt;&#x2F;g&gt;
            &lt;g transform=&quot;translate(672,0)&quot; style=&quot;opacity: 1;&quot;&gt;
                &lt;line class=&quot;tick&quot; y2=&quot;-120&quot; x2=&quot;0&quot;&gt;&lt;&#x2F;line&gt;
                &lt;text y=&quot;3&quot; x=&quot;0&quot; dy=&quot;.71em&quot; text-anchor=&quot;middle&quot;&gt;1,600&lt;&#x2F;text&gt;
            &lt;&#x2F;g&gt;
            &lt;g transform=&quot;translate(756,0)&quot; style=&quot;opacity: 1;&quot;&gt;
                &lt;line class=&quot;tick&quot; y2=&quot;-120&quot; x2=&quot;0&quot;&gt;&lt;&#x2F;line&gt;
                &lt;text y=&quot;3&quot; x=&quot;0&quot; dy=&quot;.71em&quot; text-anchor=&quot;middle&quot;&gt;1,800&lt;&#x2F;text&gt;
            &lt;&#x2F;g&gt;
            &lt;g transform=&quot;translate(840,0)&quot; style=&quot;opacity: 1;&quot;&gt;
                &lt;line class=&quot;tick&quot; y2=&quot;-120&quot; x2=&quot;0&quot;&gt;&lt;&#x2F;line&gt;
                &lt;text y=&quot;3&quot; x=&quot;0&quot; dy=&quot;.71em&quot; text-anchor=&quot;middle&quot;&gt;2,000&lt;&#x2F;text&gt;
            &lt;&#x2F;g&gt;
            &lt;path class=&quot;domain&quot; d=&quot;M0,-120V0H840V-120&quot;&gt;&lt;&#x2F;path&gt;
        &lt;&#x2F;g&gt;
        &lt;g class=&quot;y axis&quot; transform=&quot;translate(-25,0)&quot;&gt;
            &lt;g transform=&quot;translate(0,120)&quot; style=&quot;opacity: 1;&quot;&gt;
                &lt;line class=&quot;tick&quot; x2=&quot;-6&quot; y2=&quot;0&quot;&gt;&lt;&#x2F;line&gt;
                &lt;text x=&quot;-9&quot; y=&quot;0&quot; dy=&quot;.32em&quot; text-anchor=&quot;end&quot;&gt;0&lt;&#x2F;text&gt;
            &lt;&#x2F;g&gt;
            &lt;g transform=&quot;translate(0,95.24057071334579)&quot; style=&quot;opacity: 1;&quot;&gt;
                &lt;line class=&quot;tick&quot; x2=&quot;-6&quot; y2=&quot;0&quot;&gt;&lt;&#x2F;line&gt;
                &lt;text x=&quot;-9&quot; y=&quot;0&quot; dy=&quot;.32em&quot; text-anchor=&quot;end&quot;&gt;200&lt;&#x2F;text&gt;
            &lt;&#x2F;g&gt;
            &lt;g transform=&quot;translate(0,70.4811414266916)&quot; style=&quot;opacity: 1;&quot;&gt;
                &lt;line class=&quot;tick&quot; x2=&quot;-6&quot; y2=&quot;0&quot;&gt;&lt;&#x2F;line&gt;
                &lt;text x=&quot;-9&quot; y=&quot;0&quot; dy=&quot;.32em&quot; text-anchor=&quot;end&quot;&gt;400&lt;&#x2F;text&gt;
            &lt;&#x2F;g&gt;
            &lt;g transform=&quot;translate(0,45.7217121400374)&quot; style=&quot;opacity: 1;&quot;&gt;
                &lt;line class=&quot;tick&quot; x2=&quot;-6&quot; y2=&quot;0&quot;&gt;&lt;&#x2F;line&gt;
                &lt;text x=&quot;-9&quot; y=&quot;0&quot; dy=&quot;.32em&quot; text-anchor=&quot;end&quot;&gt;600&lt;&#x2F;text&gt;
            &lt;&#x2F;g&gt;
            &lt;g transform=&quot;translate(0,20.962282853383186)&quot; style=&quot;opacity: 1;&quot;&gt;
                &lt;line class=&quot;tick&quot; x2=&quot;-6&quot; y2=&quot;0&quot;&gt;&lt;&#x2F;line&gt;
                &lt;text x=&quot;-9&quot; y=&quot;0&quot; dy=&quot;.32em&quot; text-anchor=&quot;end&quot;&gt;800&lt;&#x2F;text&gt;
            &lt;&#x2F;g&gt;
            &lt;path class=&quot;domain&quot; d=&quot;M-6,0H0V120H-6&quot;&gt;&lt;&#x2F;path&gt;
        &lt;&#x2F;g&gt;
        &lt;text class=&quot;y label&quot; text-anchor=&quot;end&quot; y=&quot;6&quot; dy=&quot;.75em&quot; transform=&quot;rotate(-90)&quot;&gt;execution time&lt;&#x2F;text&gt;
        &lt;text class=&quot;y label&quot; text-anchor=&quot;end&quot; y=&quot;25&quot; dy=&quot;.75em&quot; transform=&quot;rotate(-90)&quot;&gt;(milliseconds)&lt;&#x2F;text&gt;
        &lt;text class=&quot;x label&quot; text-anchor=&quot;end&quot; x=&quot;160&quot; y=&quot;160&quot; dx=&quot;.75em&quot;&gt;number of subpaths&lt;&#x2F;text&gt;
        &lt;rect x=&quot;70&quot; y=&quot;55&quot; width=&quot;10&quot; height=&quot;10&quot; style=&quot;fill: steelblue;&quot;&gt;&lt;&#x2F;rect&gt;
        &lt;rect x=&quot;70&quot; y=&quot;25&quot; width=&quot;10&quot; height=&quot;10&quot; style=&quot;fill: rgb(223, 94, 98);&quot;&gt;&lt;&#x2F;rect&gt;
        &lt;text text-anchor=&quot;start&quot; x=&quot;90&quot; y=&quot;65&quot;&gt;Chrome&lt;&#x2F;text&gt;
        &lt;text text-anchor=&quot;start&quot; x=&quot;90&quot; y=&quot;35&quot;&gt;Firefox&lt;&#x2F;text&gt;
        &lt;path class=&quot;chartline1&quot; d=&quot;M0,119.99715266556885L8.4,119.9870012997277L16.8,119.98997243134718L25.2,119.98353497935483L33.6,119.97474538213508L42,119.96347984159884L50.4,119.95085253289156L58.800000000000004,119.93599687524448L67.2,119.9170559117332L75.6,119.9005908915384L84,119.81380909178408L92.4,119.52251440624426L100.8,119.83237866373032L109.2,119.80402911705758L117.60000000000001,119.76874693053983L126,119.738292832566L134.4,119.7139047945691L142.8,119.67664185348825L151.2,119.61981896340477L159.6,119.43065692356936L168,119.56101531875817L176.4,119.34276094957032L184.8,119.45318800419147L193.20000000000002,119.42483845751872L201.6,119.38274742789397L210,119.32716250924355L218.4,119.27479631613893L226.8,119.24335184110872L235.20000000000002,119.18900489344098L243.6,119.14765664694629L252,119.09677601965141L260.4,119.03970553519125L268.8,118.99588134538007L277.2,118.93484935224404L285.6,118.89795780227784L294,118.83630682365047L302.4,118.7975583163095L310.8,118.75744804124787L319.2,118.70842437132778L327.6,118.66398119602526L336,118.62647066056772L344.40000000000003,117.35395979214475L352.8,118.54488834092231L361.2,118.37231511892041L369.6,118.44547923246071L378,118.43557546054588L386.40000000000003,118.40512136257203L394.8,118.38159990444316L403.2,118.3497840382983L411.59999999999997,118.32527220311306L420,118.31895854875941L428.40000000000003,118.3085595880912L436.8,118.28800926158183L445.20000000000005,118.2777340990027L453.6,118.25755516405836L462.00000000000006,118.24430886940937L470.40000000000003,118.23948078041511L478.80000000000007,118.22722486282248L487.2,117.81287581395424L495.59999999999997,118.21360717705883L504,118.21385477143552L512.4,118.21992083186285L520.8,118.2107598426277L529.2,118.2123692051754L537.6,118.2080363053849L546,118.20357960840603L554.4,118.20902668289163L562.8000000000001,118.20741731989354L571.2,118.210017059948L579.6,118.20345581121768L588,118.20543656533043L596.4,118.19119989362507L604.8,117.79133511083886L613.1999999999999,118.1970183596757L621.6,118.19738975079036L630,118.19738975079036L638.4,118.1940472280562L646.8000000000001,118.19491380792424L655.2,118.19305685054947L663.6,118.19144748755137L672,118.18327687582297L680.4000000000001,118.17312550998182L688.8000000000001,118.1783249905411L697.2,118.09253356784315L705.6,118.08894345073232L714,118.05910833824981L722.4,118.16730704438154L730.8,118.08931484184697L739.2,118.09216217627812L747.6,118.06269845536065L756,118.02667348571286L764.4,118.16520249263009L772.8000000000001,118.16185996989593L781.2,118.15938402702982L789.6,118.15220379190741L798,118.15307037267618L806.4,118.15269898066077L814.8,118.1533179666025L823.1999999999999,118.14081445508356L831.6,118.15282277784912&quot;&gt;&lt;&#x2F;path&gt;
        &lt;path class=&quot;chartline2&quot; d=&quot;M0,119.9912308291324L8.4,119.93999391376089L16.8,119.94360581930523L25.2,119.90974680456713L33.6,119.87566829748843L42,119.82725767097L50.4,119.53072611852409L58.800000000000004,119.75350762553386L67.2,119.72090193310626L75.6,119.61835568103258L84,119.55524278160658L92.4,119.50405129978782L100.8,119.51322144961271L109.2,119.43695720792967L117.60000000000001,119.2900369828913L126,119.27491726600596L134.4,119.13142993583818L142.8,119.00078123633557L151.2,118.96507900588423L159.6,118.85537802152959L168,118.76208870108046L176.4,118.64402682884715L184.8,118.53474997351618L193.20000000000002,118.3230038679366L201.6,118.2931461007684L210,118.15872641638828L218.4,118.02142188710482L226.8,117.88072333525474L235.20000000000002,117.73717732523956L243.6,117.2005280847888L252,117.35293759909716L260.4,113.53191762891937L268.8,110.89718666177275L277.2,107.63527545794592L285.6,104.35110008011594L294,101.0171323758162L302.4,97.60070289708865L310.8,94.36911902300646L319.2,90.6793943448271L327.6,87.55608221704398L336,83.95848440410875L344.40000000000003,80.20568223248725L352.8,77.28288236202775L361.2,74.23344556239297L369.6,70.37056569170028L378,67.10857748604835L386.40000000000003,63.670215857264495L394.8,60.44323352311505L403.2,56.307507465220645L411.59999999999997,53.56912510887422L420,47.83764392968311L428.40000000000003,46.02670646541338L436.8,43.49289827456225L445.20000000000005,40.17975473585841L453.6,36.59497661262485L462.00000000000006,32.873368598367264L470.40000000000003,29.00521311227945L478.80000000000007,25.453203722315394L487.2,21.83521949049407L495.59999999999997,19.685698811483718L504,16.636561229551546L512.4,14.742435425402121L520.8,15.10897636870753L529.2,14.755852931523862L537.6,12.933001848866894L546,12.931146872425032L554.4,14.418725571225323L562.8000000000001,13.544054412295864L571.2,11.614251384718287L579.6,12.094303540951373L588,10.586572152277313L596.4,11.398966042519348L604.8,10.661775823806948L613.1999999999999,10.117330953248143L621.6,11.77077925869709L630,9.823872417368008L638.4,7.789974683008694L646.8000000000001,10.0715295991846L655.2,8.72169144321795L663.6,7.964194654778922L672,5.639081960224502L680.4000000000001,8.914967881129385L688.8000000000001,5.657684833622511L697.2,5.7032650859815135L705.6,6.380235544579136L714,4.908095464115149L722.4,4.899469774139476L730.8,3.6037475599813007L739.2,3.914607889343941L747.6,3.4469436183657365L756,4.266697744151614L764.4,3.4666475435839743L772.8000000000001,4.536972788419362L781.2,3.9160970452180948L789.6,2.7566662044977335L798,1.1558531031896564L806.4,1.372214985373617L814.8,1.626467955355011L823.1999999999999,1.313460859676212L831.6,0&quot;&gt;&lt;&#x2F;path&gt;
    &lt;&#x2F;g&gt;
&lt;&#x2F;svg&gt;
&lt;p&gt;The takeaway, it would seem, is that you may see performance drop off precipitously in some browsers when the number of
subpaths in your path reaches or exceeds ~600. If you encounter this issue, in order to work around it, paths should be
periodically drawn and closed. In other words, paths should not be fully batched together, but should be batched into
chunks. Experimentation has shown that keeping subpaths to &amp;lt;200 provides relatively good performance.&lt;&#x2F;p&gt;
&lt;p&gt;Addendum: Further testing suggests this issue is not very widespread at all, and does not affect all versions of
Firefox. Currently, these results are reproducible in Firefox 31.0 running on Arch Linux. Firefox 31.0 running on
OS X 10.7 does not produce similar results. After further investigation, this sounds like it may be an issue with
&lt;a href=&quot;https:&#x2F;&#x2F;bugzilla.mozilla.org&#x2F;show_bug.cgi?id=703281&quot;&gt;cairo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>A Load of Garbage</title>
        <published>2014-08-28T09:30:00+00:00</published>
        <updated>2014-08-28T09:30:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://ebenpackwood.com/posts/low-garbage-canvas.html/" type="text/html"/>
        <id>https://ebenpackwood.com/posts/low-garbage-canvas.html/</id>
        
        <content type="html">&lt;p&gt;After I completed a working version of my 3D rendering engine &lt;a href=&quot;&#x2F;pages&#x2F;projects&#x2F;wireframe.html&quot;&gt;wireframe.js&lt;&#x2F;a&gt;, I started
looking for ways to make improvements, both in terms of performance, and usability. While both efforts are still
ongoing, there are a few things I have learned with regard to performance that I wanted to get down in writing.&lt;&#x2F;p&gt;
&lt;!--more--&gt;
&lt;p&gt;One of the main areas of focus for performance on this project has been memory management. In order to achieve a smooth,
stable 60 frames per second, you have just under 17ms to complete all of the operations required to get a frame on the
screen. This includes any physics or game logic you might need to execute, as well as the time required to paint the
frame itself. I don&#x27;t know if you&#x27;ve heard, but 17ms is not very much time at all. So when a garbage collection (GC)
event occurs, this takes some time away from the already tight 17ms you have to draw your frame. And if you don&#x27;t have
those extra milliseconds to spare for a GC event (and you don&#x27;t really have much say in when they occur, so you can&#x27;t
exactly plan for them), this can result in skipped frames, which can appear to the user as a stutter or pause. I
believe some folks call it jank.&lt;&#x2F;p&gt;
&lt;p&gt;So how do we avoid this? Well, the obvious answer is: if you want to avoid garbage collection, then don&#x27;t make so much
garbage. It may sound an easy thing, but the details of just how to achieve this can be a little more tricky. First,
just where does garbage come from in JavaScript? If you aren&#x27;t experienced with memory management, the answer may not
be obvious.&lt;&#x2F;p&gt;
&lt;p&gt;Simply put, creating a new object requires the interpreter to allocate memory for that object. But isn&#x27;t everything in
JavaScript an object? Well... yes and no. Strings, numbers, and booleans (so long as they aren&#x27;t instantiated by their
respective &lt;code&gt;String&lt;&#x2F;code&gt;, &lt;code&gt;Number&lt;&#x2F;code&gt; or &lt;code&gt;Boolean&lt;&#x2F;code&gt; constructors) and &lt;code&gt;null&lt;&#x2F;code&gt; and &lt;code&gt;undefined&lt;&#x2F;code&gt; are all primitive types, meaning
they&#x27;re not, strictly speaking, objects. They do, however, behave like objects on occasion. When a method is called on
a primitive type, a wrapper object is quickly created for that value in order to call the method, and then, just as
quickly, it is discarded. And, more importantly, while they may not technically be objects, they still need some memory
allocated in order to store them.&lt;&#x2F;p&gt;
&lt;p&gt;Garbage is what happens to the memory allocated to objects that are no longer in use (or, more specifically, objects
that are no longer referenced). Once an object is no longer referenced in a program, the interpreter can mark this
object as garbage that needs to be collected (i.e. memory which can be deallocated). E.g.:&lt;&#x2F;p&gt;
&lt;pre data-linenos data-lang=&quot;js&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; Memory allocated for first array object.
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;foo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;];
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; foo assigned to second array object. Memory allocated
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; for second array object. First array object
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;6&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; no longer referenced, can be marked for GC.
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;7&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;foo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;#39;a&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;#39;b&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;#39;c&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;];
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;8&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;9&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; bar assigned to value of foo. Second array object now
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;10&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; referenced by both foo and bar.
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;11&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;bar &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;foo;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;13&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; foo assigned to &amp;#39;bar&amp;#39;, but second array still
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;14&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; referenced by bar, so cannot be marked for GC.
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;15&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;foo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;#39;bar&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;But while virtually anything you do in JavaScript will require the allocation of some amount of memory, the situation
is not so hopeless as it may seem. After all, the goal is to reduce garbage, not necessarily to reduce the total amount
of memory allocated (although memory use should always be kept as low as possible). As garbage is created when an object
is no longer referenced, there are a few strategies to reduce garbage collection.&lt;&#x2F;p&gt;
&lt;p&gt;What it boils down to is that, in order to reduce garbage, it is imperative that, as much as possible, you should not
discard objects once they have been created. wireframe.js provides us with a good case study of how this can be achieved
in a project that makes use of the canvas, and for JavaScript in general.&lt;&#x2F;p&gt;
&lt;p&gt;In the first, &#x27;high-garbage&#x27; iteration, I was using a version of the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ebenpack&#x2F;linearalgea.js&quot;&gt;linearalgea.js&lt;&#x2F;a&gt; math library (which I created especially to perform the
matrix and vector math required by a 3D rendering engine) that created and returned a new matrix, or a new vector, for
virtually every method call. As a general design decision, this mostly made sense. You want your matrices and vectors
to be more or less immutable. You don&#x27;t want the methods you&#x27;re calling to change the value of the object itself, as you
often need to use these matrices and vectors in multiple operations. E.g.:&lt;&#x2F;p&gt;
&lt;pre data-linenos data-lang=&quot;js&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; Old, high-garbage methods
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;Vector&lt;&#x2F;span&gt;&lt;span&gt;.prototype.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;subtract &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;vector&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;return new &lt;&#x2F;span&gt;&lt;span&gt;Vector(
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;        this.x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;vector.x,
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;        this.y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;vector.y,
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;6&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;        this.z &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;vector.z
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;7&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    );
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;8&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;};
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;9&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;Vector&lt;&#x2F;span&gt;&lt;span&gt;.prototype.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;cross &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;vector&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;10&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;return new &lt;&#x2F;span&gt;&lt;span&gt;Vector(
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;11&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;        (this.y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;vector.z) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;(this.z &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;vector.y),
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;        (this.z &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;vector.x) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;(this.x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;vector.z),
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;13&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;        (this.x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;vector.y) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;(this.y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;vector.x)
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;14&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    );
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;15&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;};
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;16&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;17&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; Three vertices of a triangle
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;18&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;vertex1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span&gt;Vector(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;19&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;vertex2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span&gt;Vector(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;20&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;vertex3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span&gt;Vector(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;21&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;22&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; Find vectors representing two sides of the triangle
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;23&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; We may still need to use the vertices later,
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;24&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; so an in-place operation would not be appropriate
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;25&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;side1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;vertex2.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;subtract&lt;&#x2F;span&gt;&lt;span&gt;(vertex1);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;26&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;side2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;vertex3.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;subtract&lt;&#x2F;span&gt;&lt;span&gt;(vertex1);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;27&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;28&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; Find the normal of the triangle, using the two sides
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;29&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;normal &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;side1.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;cross&lt;&#x2F;span&gt;&lt;span&gt;(side2);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The above code does what we want, but it also creates three new vectors along the way. Assume we run this code just
once per frame (in reality it will run many times per frame, potentially once per triangle of every mesh in our scene).
This means that for every frame, we are adding three new vectors as garbage that will need to be collected (assuming the
interpreter isn&#x27;t smart enough to make some reuse of them, which... are there any interpreters that do that? I don&#x27;t
know).&lt;&#x2F;p&gt;
&lt;p&gt;The solution to this problem was to add &#x27;low-garbage&#x27; versions of all of these methods which do not create a new vector
or matrix, but which rather assign the result of the operation to a matrix or vector object that is passed to the method
call. As JavaScript uses a call-by-sharing evaluation strategy (which means that mutations made to a mutable argument
inside a function will be visible outside of that function), we can pass an object to a function that we will use to
store the results of the function call.&lt;&#x2F;p&gt;
&lt;p&gt;This method of returning results might be familiar to those of you who are have some experience with C. In C, functions
are limited in what they can return; e.g. a function cannot return an array. Instead, a function can return a pointer to
an array, or, alternatively, a pointer to the array can be assigned to a pointer that is passed as an argument to the
function.&lt;&#x2F;p&gt;
&lt;p&gt;The above example, rewritten to use the low-garbage methods, would look something like this:&lt;&#x2F;p&gt;
&lt;pre data-linenos data-lang=&quot;js&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; New, low-grabage methods
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;Vector&lt;&#x2F;span&gt;&lt;span&gt;.prototype.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;subtractLG &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;vector&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;result&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    result.x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;this.x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;vector.x;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    result.y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;this.y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;vector.y;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    result.z &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;this.z &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;vector.z;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;6&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;};
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;7&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;Vector&lt;&#x2F;span&gt;&lt;span&gt;.prototype.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;crossLG &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;vector&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;result&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;8&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    result.x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(this.y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;vector.z) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;(this.z &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;vector.y);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;9&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    result.y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(this.z &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;vector.x) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;(this.x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;vector.z);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;10&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    result.z &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(this.x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;vector.y) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;(this.y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;vector.x);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;11&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;};
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;13&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; Results vectors
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;14&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;side1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span&gt;Vector(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;15&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;side12 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span&gt;Vector(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;16&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;normal &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span&gt;Vector(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;17&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;18&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; Three vertices of a triangle
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;19&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;vertex1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span&gt;Vector(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;20&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;vertex2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span&gt;Vector(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;21&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;vertex3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span&gt;Vector(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;22&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;23&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; Find vectors representing two sides of the triangle
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;24&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;vertex2.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;subtractLG&lt;&#x2F;span&gt;&lt;span&gt;(vertex1, side1);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;25&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;vertex3.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;subtractLG&lt;&#x2F;span&gt;&lt;span&gt;(vertex1, side2);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;26&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;27&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; Find the normal of the triangle, using the two sides
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;28&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;side1.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;crossLG&lt;&#x2F;span&gt;&lt;span&gt;(side2, normal);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This example may look very similar to the earlier example. And if it was executed as-is, since the results vectors would
be created anew for every frame, there would be little or no difference between this and the earlier version in terms of
memory use. The key difference comes when these results vectors are created just once, and a reference is kept in order
to prevent them from being garbage collected. So now, instead of creating and discarding a new object for every method
call, multiple times per frame, we&#x27;re creating just a handful of objects upon initialization, and using them over and
over.&lt;&#x2F;p&gt;
&lt;p&gt;Implementing low-garbage versions of all of the matrix and vector methods had a fairly large impact for wireframe.js.
Compare the before and after graphs below.&lt;&#x2F;p&gt;
&lt;svg viewbox=&quot;0 0 835 120&quot;&gt;
    &lt;g transform=&quot;translate(0,50)&quot;&gt;
        &lt;path class=&quot;chartfill&quot; d=&quot;M0,-22L4.2,0L8.4,0L12.6,0L16.8,-6L21,-6L25.2,-6L29.400000000000002,18L33.6,18L37.8,10L42,10L46.2,10L50.4,4L54.6,4L58.800000000000004,-4.0000000000000036L63,-4.0000000000000036L67.2,-10L71.4,14L75.6,14L79.8,5.999999999999998L84,5.999999999999998L88.2,0L92.4,0L96.60000000000001,-8.000000000000004L100.8,16L105,16L109.2,16L113.4,10L117.60000000000001,10L121.8,10L126,2L130.2,2L134.4,-4.0000000000000036L138.6,-4.0000000000000036L142.8,-4.0000000000000036L147,-12L151.2,-12L155.4,-12L159.6,12L163.8,4L168,4L172.20000000000002,4L176.4,-2L180.6,-10L184.8,-10L189,14L193.20000000000002,7.999999999999998L197.4,7.999999999999998L201.6,7.999999999999998L205.79999999999998,0L210,-6L214.20000000000002,-6L218.4,-12L222.60000000000002,18L226.8,10L231.00000000000003,10L235.20000000000002,4L239.40000000000003,4L243.6,4L247.79999999999998,-4.0000000000000036L252,-10L256.2,-10L260.4,-12L264.6,14L268.8,5.999999999999998L273,5.999999999999998L277.2,5.999999999999998L281.40000000000003,5.999999999999998L285.6,0L289.8,0L294,-8.000000000000004L298.2,-8.000000000000004L302.4,-8.000000000000004L306.59999999999997,16L310.8,16L315,10L319.2,10L323.40000000000003,2L327.6,-4.0000000000000036L331.8,-4.0000000000000036L336,-12L340.20000000000005,-12L344.40000000000003,12L348.6,12L352.8,5.999999999999998L357,-2L361.2,-2L365.4,-8.000000000000004L369.6,-8.000000000000004L373.8,14L378,14L382.2,7.999999999999998L386.40000000000003,7.999999999999998L390.6,0L394.8,-6L399,-6L403.2,18L407.4,18L411.59999999999997,10L415.8,10L420,4L424.2,-4.0000000000000036L428.40000000000003,-10L432.6,-10L436.8,14L441,14L445.20000000000005,5.999999999999998L449.40000000000003,0L453.6,0L457.8,-8.000000000000004L462.00000000000006,-8.000000000000004L466.20000000000005,-8.000000000000004L470.40000000000003,16L474.6,16L478.80000000000007,10L483.00000000000006,10L487.2,2L491.4,2L495.59999999999997,-4.0000000000000036L499.79999999999995,-4.0000000000000036L504,-12L508.2,12L512.4,12L516.6,5.999999999999998L520.8,5.999999999999998L525,-2L529.2,-2L533.4,-8.000000000000004L537.6,-8.000000000000004L541.8000000000001,16L546,16L550.2,7.999999999999998L554.4,7.999999999999998L558.6,2L562.8000000000001,-6L567,-6L571.2,18L575.4000000000001,18L579.6,10L583.8000000000001,10L588,4L592.1999999999999,4L596.4,4L600.6,-4.0000000000000036L604.8,-4.0000000000000036L609,-4.0000000000000036L613.1999999999999,-10L617.4,-10L621.6,14L625.8,14L630,5.999999999999998L634.2,5.999999999999998L638.4,0L642.6,-8.000000000000004L646.8000000000001,-8.000000000000004L651,16L655.2,10L659.4,10L663.6,2L667.8000000000001,2L672,-4.0000000000000036L676.2,-12L680.4000000000001,-12L684.6,12L688.8000000000001,12L693,5.999999999999998L697.2,5.999999999999998L701.4,-2L705.6,-8.000000000000004L709.8,16L714,16L718.1999999999999,16L722.4,7.999999999999998L726.6,7.999999999999998L730.8,2L735,-6L739.2,-12L743.4,18L747.6,10L751.8000000000001,10L756,10L760.2,4L764.4,-4.0000000000000036L768.6,-4.0000000000000036L772.8000000000001,-4.0000000000000036L777,-10L781.2,-10L785.4000000000001,14L789.6,14L793.8000000000001,5.999999999999998L798,5.999999999999998L802.2,0L806.4,0L810.6,-8.000000000000004L814.8,-8.000000000000004L819,-12L823.1999999999999,16L827.4,10L831.6,10L835.8,2L835.8,25L0,25L0,-22&quot;&gt;&lt;&#x2F;path&gt;
        &lt;path class=&quot;chartline&quot; d=&quot;M0,-22L4.2,0L8.4,0L12.6,0L16.8,-6L21,-6L25.2,-6L29.400000000000002,18L33.6,18L37.8,10L42,10L46.2,10L50.4,4L54.6,4L58.800000000000004,-4.0000000000000036L63,-4.0000000000000036L67.2,-10L71.4,14L75.6,14L79.8,5.999999999999998L84,5.999999999999998L88.2,0L92.4,0L96.60000000000001,-8.000000000000004L100.8,16L105,16L109.2,16L113.4,10L117.60000000000001,10L121.8,10L126,2L130.2,2L134.4,-4.0000000000000036L138.6,-4.0000000000000036L142.8,-4.0000000000000036L147,-12L151.2,-12L155.4,-12L159.6,12L163.8,4L168,4L172.20000000000002,4L176.4,-2L180.6,-10L184.8,-10L189,14L193.20000000000002,7.999999999999998L197.4,7.999999999999998L201.6,7.999999999999998L205.79999999999998,0L210,-6L214.20000000000002,-6L218.4,-12L222.60000000000002,18L226.8,10L231.00000000000003,10L235.20000000000002,4L239.40000000000003,4L243.6,4L247.79999999999998,-4.0000000000000036L252,-10L256.2,-10L260.4,-12L264.6,14L268.8,5.999999999999998L273,5.999999999999998L277.2,5.999999999999998L281.40000000000003,5.999999999999998L285.6,0L289.8,0L294,-8.000000000000004L298.2,-8.000000000000004L302.4,-8.000000000000004L306.59999999999997,16L310.8,16L315,10L319.2,10L323.40000000000003,2L327.6,-4.0000000000000036L331.8,-4.0000000000000036L336,-12L340.20000000000005,-12L344.40000000000003,12L348.6,12L352.8,5.999999999999998L357,-2L361.2,-2L365.4,-8.000000000000004L369.6,-8.000000000000004L373.8,14L378,14L382.2,7.999999999999998L386.40000000000003,7.999999999999998L390.6,0L394.8,-6L399,-6L403.2,18L407.4,18L411.59999999999997,10L415.8,10L420,4L424.2,-4.0000000000000036L428.40000000000003,-10L432.6,-10L436.8,14L441,14L445.20000000000005,5.999999999999998L449.40000000000003,0L453.6,0L457.8,-8.000000000000004L462.00000000000006,-8.000000000000004L466.20000000000005,-8.000000000000004L470.40000000000003,16L474.6,16L478.80000000000007,10L483.00000000000006,10L487.2,2L491.4,2L495.59999999999997,-4.0000000000000036L499.79999999999995,-4.0000000000000036L504,-12L508.2,12L512.4,12L516.6,5.999999999999998L520.8,5.999999999999998L525,-2L529.2,-2L533.4,-8.000000000000004L537.6,-8.000000000000004L541.8000000000001,16L546,16L550.2,7.999999999999998L554.4,7.999999999999998L558.6,2L562.8000000000001,-6L567,-6L571.2,18L575.4000000000001,18L579.6,10L583.8000000000001,10L588,4L592.1999999999999,4L596.4,4L600.6,-4.0000000000000036L604.8,-4.0000000000000036L609,-4.0000000000000036L613.1999999999999,-10L617.4,-10L621.6,14L625.8,14L630,5.999999999999998L634.2,5.999999999999998L638.4,0L642.6,-8.000000000000004L646.8000000000001,-8.000000000000004L651,16L655.2,10L659.4,10L663.6,2L667.8000000000001,2L672,-4.0000000000000036L676.2,-12L680.4000000000001,-12L684.6,12L688.8000000000001,12L693,5.999999999999998L697.2,5.999999999999998L701.4,-2L705.6,-8.000000000000004L709.8,16L714,16L718.1999999999999,16L722.4,7.999999999999998L726.6,7.999999999999998L730.8,2L735,-6L739.2,-12L743.4,18L747.6,10L751.8000000000001,10L756,10L760.2,4L764.4,-4.0000000000000036L768.6,-4.0000000000000036L772.8000000000001,-4.0000000000000036L777,-10L781.2,-10L785.4000000000001,14L789.6,14L793.8000000000001,5.999999999999998L798,5.999999999999998L802.2,0L806.4,0L810.6,-8.000000000000004L814.8,-8.000000000000004L819,-12L823.1999999999999,16L827.4,10L831.6,10L835.8,2&quot;&gt;&lt;&#x2F;path&gt;
        &lt;line x1=&quot;0&quot; y1=&quot;25&quot; x2=&quot;835&quot; y2=&quot;25&quot; style=&quot;stroke: #8F8F8F;&quot;&#x2F;&gt;
        &lt;text x=&quot;2&quot; y=&quot;45&quot; font-family=&quot;Verdana&quot; font-size=&quot;15&quot; style=&quot;fill:#8F8F8F;&quot;&gt;5.7MB-9.7MB&lt;&#x2F;text&gt;
    &lt;&#x2F;g&gt;
&lt;&#x2F;svg&gt;
&lt;div class=&quot;illustration-label&quot;&gt;Memory usage for &#x27;high-garbage&#x27; math methods&lt;&#x2F;div&gt;
&lt;svg viewbox=&quot;0 0 835 120&quot;&gt;
    &lt;g transform=&quot;translate(0,50)&quot;&gt;
        &lt;path class=&quot;chartfill&quot; d=&quot;M0,-22L4.2,14L8.4,14L12.6,12L16.8,12L21,7.999999999999998L25.2,7.999999999999998L29.400000000000002,5.999999999999998L33.6,4L37.8,4L42,0L46.2,0L50.4,-2L54.6,-2L58.800000000000004,-6L63,-6L67.2,-8.000000000000004L71.4,-8.000000000000004L75.6,-12L79.8,-12L84,18L88.2,18L92.4,14L96.60000000000001,14L100.8,12L105,12L109.2,7.999999999999998L113.4,5.999999999999998L117.60000000000001,5.999999999999998L121.8,2L126,2L130.2,0L134.4,0L138.6,-2L142.8,-2L147,-6L151.2,-6L155.4,-8.000000000000004L159.6,-8.000000000000004L163.8,-12L168,-12L172.20000000000002,18L176.4,18L180.6,14L184.8,14L189,12L193.20000000000002,7.999999999999998L197.4,7.999999999999998L201.6,5.999999999999998L205.79999999999998,5.999999999999998L210,2L214.20000000000002,2L218.4,0L222.60000000000002,0L226.8,-4.0000000000000036L231.00000000000003,-4.0000000000000036L235.20000000000002,-6L239.40000000000003,-6L243.6,-8.000000000000004L247.79999999999998,-8.000000000000004L252,-8.000000000000004L256.2,-12L260.4,-12L264.6,16L268.8,16L273,14L277.2,12L281.40000000000003,12L285.6,7.999999999999998L289.8,7.999999999999998L294,5.999999999999998L298.2,5.999999999999998L302.4,2L306.59999999999997,2L310.8,0L315,0L319.2,-4.0000000000000036L323.40000000000003,-4.0000000000000036L327.6,-6L331.8,-6L336,-8.000000000000004L340.20000000000005,-8.000000000000004L344.40000000000003,-12L348.6,-12L352.8,16L357,16L361.2,14L365.4,14L369.6,10L373.8,10L378,7.999999999999998L382.2,7.999999999999998L386.40000000000003,5.999999999999998L390.6,5.999999999999998L394.8,2L399,2L403.2,0L407.4,0L411.59999999999997,-4.0000000000000036L415.8,-4.0000000000000036L420,-4.0000000000000036L424.2,-6L428.40000000000003,-6L432.6,-6L436.8,-10L441,-10L445.20000000000005,-12L449.40000000000003,-12L453.6,-14L457.8,16L462.00000000000006,14L466.20000000000005,14L470.40000000000003,14L474.6,10L478.80000000000007,10L483.00000000000006,7.999999999999998L487.2,7.999999999999998L491.4,7.999999999999998L495.59999999999997,4L499.79999999999995,4L504,2L508.2,0L512.4,0L516.6,-4.0000000000000036L520.8,-4.0000000000000036L525,-4.0000000000000036L529.2,-6L533.4,-10L537.6,-10L541.8000000000001,-12L546,-12L550.2,16L554.4,14L558.6,14L562.8000000000001,10L567,10L571.2,7.999999999999998L575.4000000000001,7.999999999999998L579.6,7.999999999999998L583.8000000000001,4L588,4L592.1999999999999,2L596.4,2L600.6,-2L604.8,-2L609,-4.0000000000000036L613.1999999999999,-4.0000000000000036L617.4,-6L621.6,-6L625.8,-10L630,-10L634.2,-12L638.4,-12L642.6,16L646.8000000000001,16L651,12L655.2,12L659.4,10L663.6,10L667.8000000000001,7.999999999999998L672,7.999999999999998L676.2,4L680.4000000000001,2L684.6,2L688.8000000000001,-2L693,-2L697.2,-2L701.4,-4.0000000000000036L705.6,-8.000000000000004L709.8,-8.000000000000004L714,-10L718.1999999999999,-10L722.4,-12L726.6,-12L730.8,16L735,16L739.2,12L743.4,12L747.6,12L751.8000000000001,10L756,7.999999999999998L760.2,7.999999999999998L764.4,4L768.6,4L772.8000000000001,2L777,2L781.2,2L785.4000000000001,-2L789.6,-4.0000000000000036L793.8000000000001,-4.0000000000000036L798,-8.000000000000004L802.2,-8.000000000000004L806.4,-8.000000000000004L810.6,-10L814.8,-10L819,-14L823.1999999999999,-14L827.4,16L831.6,16L835.8,12L835.8,25L0,25L0,-22&quot;&gt;&lt;&#x2F;path&gt;
        &lt;path class=&quot;chartline&quot; d=&quot;M0,-22L4.2,14L8.4,14L12.6,12L16.8,12L21,7.999999999999998L25.2,7.999999999999998L29.400000000000002,5.999999999999998L33.6,4L37.8,4L42,0L46.2,0L50.4,-2L54.6,-2L58.800000000000004,-6L63,-6L67.2,-8.000000000000004L71.4,-8.000000000000004L75.6,-12L79.8,-12L84,18L88.2,18L92.4,14L96.60000000000001,14L100.8,12L105,12L109.2,7.999999999999998L113.4,5.999999999999998L117.60000000000001,5.999999999999998L121.8,2L126,2L130.2,0L134.4,0L138.6,-2L142.8,-2L147,-6L151.2,-6L155.4,-8.000000000000004L159.6,-8.000000000000004L163.8,-12L168,-12L172.20000000000002,18L176.4,18L180.6,14L184.8,14L189,12L193.20000000000002,7.999999999999998L197.4,7.999999999999998L201.6,5.999999999999998L205.79999999999998,5.999999999999998L210,2L214.20000000000002,2L218.4,0L222.60000000000002,0L226.8,-4.0000000000000036L231.00000000000003,-4.0000000000000036L235.20000000000002,-6L239.40000000000003,-6L243.6,-8.000000000000004L247.79999999999998,-8.000000000000004L252,-8.000000000000004L256.2,-12L260.4,-12L264.6,16L268.8,16L273,14L277.2,12L281.40000000000003,12L285.6,7.999999999999998L289.8,7.999999999999998L294,5.999999999999998L298.2,5.999999999999998L302.4,2L306.59999999999997,2L310.8,0L315,0L319.2,-4.0000000000000036L323.40000000000003,-4.0000000000000036L327.6,-6L331.8,-6L336,-8.000000000000004L340.20000000000005,-8.000000000000004L344.40000000000003,-12L348.6,-12L352.8,16L357,16L361.2,14L365.4,14L369.6,10L373.8,10L378,7.999999999999998L382.2,7.999999999999998L386.40000000000003,5.999999999999998L390.6,5.999999999999998L394.8,2L399,2L403.2,0L407.4,0L411.59999999999997,-4.0000000000000036L415.8,-4.0000000000000036L420,-4.0000000000000036L424.2,-6L428.40000000000003,-6L432.6,-6L436.8,-10L441,-10L445.20000000000005,-12L449.40000000000003,-12L453.6,-14L457.8,16L462.00000000000006,14L466.20000000000005,14L470.40000000000003,14L474.6,10L478.80000000000007,10L483.00000000000006,7.999999999999998L487.2,7.999999999999998L491.4,7.999999999999998L495.59999999999997,4L499.79999999999995,4L504,2L508.2,0L512.4,0L516.6,-4.0000000000000036L520.8,-4.0000000000000036L525,-4.0000000000000036L529.2,-6L533.4,-10L537.6,-10L541.8000000000001,-12L546,-12L550.2,16L554.4,14L558.6,14L562.8000000000001,10L567,10L571.2,7.999999999999998L575.4000000000001,7.999999999999998L579.6,7.999999999999998L583.8000000000001,4L588,4L592.1999999999999,2L596.4,2L600.6,-2L604.8,-2L609,-4.0000000000000036L613.1999999999999,-4.0000000000000036L617.4,-6L621.6,-6L625.8,-10L630,-10L634.2,-12L638.4,-12L642.6,16L646.8000000000001,16L651,12L655.2,12L659.4,10L663.6,10L667.8000000000001,7.999999999999998L672,7.999999999999998L676.2,4L680.4000000000001,2L684.6,2L688.8000000000001,-2L693,-2L697.2,-2L701.4,-4.0000000000000036L705.6,-8.000000000000004L709.8,-8.000000000000004L714,-10L718.1999999999999,-10L722.4,-12L726.6,-12L730.8,16L735,16L739.2,12L743.4,12L747.6,12L751.8000000000001,10L756,7.999999999999998L760.2,7.999999999999998L764.4,4L768.6,4L772.8000000000001,2L777,2L781.2,2L785.4000000000001,-2L789.6,-4.0000000000000036L793.8000000000001,-4.0000000000000036L798,-8.000000000000004L802.2,-8.000000000000004L806.4,-8.000000000000004L810.6,-10L814.8,-10L819,-14L823.1999999999999,-14L827.4,16L831.6,16L835.8,12&quot;&gt;&lt;&#x2F;path&gt;
        &lt;line x1=&quot;0&quot; y1=&quot;25&quot; x2=&quot;835&quot; y2=&quot;25&quot; style=&quot;stroke: #8F8F8F;&quot;&#x2F;&gt;
        &lt;text x=&quot;2&quot; y=&quot;45&quot; font-family=&quot;Verdana&quot; font-size=&quot;15&quot; style=&quot;fill:#8F8F8F;&quot;&gt;9.9MB-13.9MB&lt;&#x2F;text&gt;
    &lt;&#x2F;g&gt;
&lt;&#x2F;svg&gt;
&lt;div class=&quot;illustration-label&quot;&gt;Memory usage for &#x27;low-garbage&#x27; math methods&lt;&#x2F;div&gt;
&lt;p&gt;While overall these memory graphs have a similar shape, the latter has a far more regular GC pattern. It grows steadily,
and then there&#x27;s a GC event, which produces the characteristic sawtooth pattern. The &#x27;high-garbage&#x27; version, on the
other hand, grows some, then has a GC event, grows, grows, GC, etc. Overall the shape is vaguely sawtooth-like, but
there are far more GC events that occur sporadically between the trough and the peak of the sawtooth, and the memory
graph appears much more erratic.&lt;&#x2F;p&gt;
&lt;p&gt;Depending on what your aims are, in order to fully make use of this sort of approach it may be necessary to implement
object pooling. What this means is that you have a &#x27;pool&#x27; of objects that you have instantiated. When you need a new
object, you pull one from the pool. When you no longer need that object, you return it to the pool. There is a bit more
overhead in this, so if you know ahead of time exactly how many objects you will need, and you are certain that you will
never need more than this, object pooling would likely not be worth the effort.&lt;&#x2F;p&gt;
&lt;p&gt;It should be noted, though that care must be taken when using this method, whether with an object pool or without, to
initialize the results object to ensure that old values from previous calculations are completely removed from your
results object. For example, the following matrix translation static method can cause problems if the results matrix
still carries values from previous calculations:&lt;&#x2F;p&gt;
&lt;pre data-linenos data-lang=&quot;js&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; If the result matrix still has values in 0-11 or 15 from
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; being used in previous calculations, this will cause problems.
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;Matrix.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;translation &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;xtrans&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;ytrans&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;ztrans&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;result&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    result[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;xtrans;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    result[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;13&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;ytrans;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;6&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;    result[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;14&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;ztrans;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;7&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;};
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The way I have implemented the low-garbage methods in these examples also makes method chaining impossible, but chaining
can be achieved by simply explicitly returning the result. This does not have any negative repercussions in terms of
memory usage or performance.&lt;&#x2F;p&gt;
&lt;p&gt;Alright, so far, so good. Implementing the low garbage math methods—and refactoring the main 3D rendering function to
make use of these methods—had a very noticeable effect on the memory-use profile of the program. Garbage collection was
now much less frequent, and at more regular intervals. But garbage can also sneak in where you don&#x27;t expect it, and
there was still work to be done.&lt;&#x2F;p&gt;
&lt;p&gt;The two graphs above represent a ~2 second time slice. So in the &#x27;good&#x27; version, GC events are still occurring
approximately every 200ms. This could be better, and I was certain that there were still areas of the program that were
still making too much garbage. The most obvious place to look was this line, which occurs at the beginning of the
render function:&lt;&#x2F;p&gt;
&lt;pre data-linenos data-lang=&quot;js&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;&lt;span&gt;back_buffer_img &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;back_buffer_ctx.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;createImageData&lt;&#x2F;span&gt;&lt;span&gt;(width, height);
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The back buffer is an &lt;code&gt;ImageData&lt;&#x2F;code&gt; array (which is a &lt;code&gt;Uint8ClampedArray&lt;&#x2F;code&gt;, which is a typed array) where pixel data is
written. This image data is then drawn to an offscreen buffer canvas, which is then used to draw to the main canvas.
While this may seem like a lot of extra, unnecessary steps, the main advantage of this is that it allows the 3D scene
to be initially drawn in one resolution, but displayed in a different resolution. So a scene can be upscaled in order
to use fewer resources, or it can be downscaled to provide a better looking image.&lt;&#x2F;p&gt;
&lt;p&gt;As &lt;code&gt;createImageData&lt;&#x2F;code&gt; creates a new &lt;code&gt;ImageData&lt;&#x2F;code&gt; array, in this early version of the program a new back buffer array was
being created for every frame. Naturally, this created a lot of unnecessary garbage. In my first attempt to tackle this
problem, I was running over the entire array, zeroing out all the values.&lt;&#x2F;p&gt;
&lt;p&gt;Backing up a little, an &lt;code&gt;ImageData&lt;&#x2F;code&gt; array is a one-dimensional array representing the RGBA values of all pixels in a 2D
canvas context, with each element representing either a red, green, blue, or alpha value of a pixel. So, for example, a
1x1 pixel &lt;code&gt;ImageData&lt;&#x2F;code&gt; array might look like this &lt;code&gt;[1, 7, 2, 9]&lt;&#x2F;code&gt;, where the RGBA values are 1, 7, 2, and 9 respectively.&lt;&#x2F;p&gt;
&lt;p&gt;So it should be clear that for any &lt;code&gt;ImageData&lt;&#x2F;code&gt; array, its length will be described by canvas width _ canvas height _ 4.
As it turned out, looping over the entire array was actually noticeably slower than just creating a new &lt;code&gt;ImageData&lt;&#x2F;code&gt;
array for every frame, even with all the extra garbage that brought with it. However, if you consider for a moment what
it is we&#x27;re trying to achieve (clearing the back buffer for the next frame), it may become clear that we can actually
get away with doing ¼ of the work. By setting the alpha value to zero, we can ignore the RGB values, just so long as we
make sure to set all RGBA values when we draw a new pixel to the array. With this change, each frame took less time to
draw (meaning fewer resources were used), and GC events became much less frequent. Here is what memory use looked like
after this change (the scale is the same as the previous two graphs):&lt;&#x2F;p&gt;
&lt;svg viewbox=&quot;0 0 835 120&quot;&gt;
    &lt;g transform=&quot;translate(0,50)&quot;&gt;
        &lt;path class=&quot;chartfill&quot; d=&quot;M0,5.999999999999998L4.2,5.999999999999998L8.4,5.999999999999998L12.6,5.999999999999998L16.8,5.999999999999998L21,5.999999999999998L25.2,4L29.400000000000002,4L33.6,4L37.8,4L42,4L46.2,4L50.4,2L54.6,2L58.800000000000004,2L63,2L67.2,2L71.4,2L75.6,0L79.8,0L84,0L88.2,0L92.4,0L96.60000000000001,0L100.8,-2L105,-2L109.2,-2L113.4,-2L117.60000000000001,-2L121.8,-2L126,-2L130.2,-4.0000000000000036L134.4,-4.0000000000000036L138.6,-4.0000000000000036L142.8,-4.0000000000000036L147,-4.0000000000000036L151.2,-6L155.4,-6L159.6,-6L163.8,-6L168,-6L172.20000000000002,-6L176.4,-6L180.6,-8.000000000000004L184.8,-8.000000000000004L189,-8.000000000000004L193.20000000000002,-8.000000000000004L197.4,-8.000000000000004L201.6,-8.000000000000004L205.79999999999998,-8.000000000000004L210,-10L214.20000000000002,-10L218.4,-10L222.60000000000002,-10L226.8,-10L231.00000000000003,-10L235.20000000000002,-10L239.40000000000003,-12L243.6,-12L247.79999999999998,-12L252,-12L256.2,-12L260.4,18L264.6,18L268.8,18L273,18L277.2,16L281.40000000000003,16L285.6,16L289.8,16L294,16L298.2,16L302.4,16L306.59999999999997,14L310.8,14L315,14L319.2,14L323.40000000000003,14L327.6,12L331.8,12L336,12L340.20000000000005,12L344.40000000000003,12L348.6,12L352.8,10L357,10L361.2,10L365.4,10L369.6,10L373.8,10L378,10L382.2,7.999999999999998L386.40000000000003,7.999999999999998L390.6,7.999999999999998L394.8,7.999999999999998L399,7.999999999999998L403.2,5.999999999999998L407.4,5.999999999999998L411.59999999999997,5.999999999999998L415.8,5.999999999999998L420,5.999999999999998L424.2,5.999999999999998L428.40000000000003,5.999999999999998L432.6,4L436.8,4L441,4L445.20000000000005,4L449.40000000000003,4L453.6,4L457.8,4L462.00000000000006,2L466.20000000000005,2L470.40000000000003,2L474.6,2L478.80000000000007,2L483.00000000000006,2L487.2,0L491.4,0L495.59999999999997,0L499.79999999999995,0L504,0L508.2,0L512.4,0L516.6,-2L520.8,-2L525,-2L529.2,-2L533.4,-2L537.6,-2L541.8000000000001,-4.0000000000000036L546,-4.0000000000000036L550.2,-4.0000000000000036L554.4,-4.0000000000000036L558.6,-4.0000000000000036L562.8000000000001,-4.0000000000000036L567,-4.0000000000000036L571.2,-6L575.4000000000001,-6L579.6,-6L583.8000000000001,-6L588,-6L592.1999999999999,-8.000000000000004L596.4,-8.000000000000004L600.6,-8.000000000000004L604.8,-8.000000000000004L609,-8.000000000000004L613.1999999999999,-8.000000000000004L617.4,-8.000000000000004L621.6,-10L625.8,-10L630,-10L634.2,-10L638.4,-10L642.6,-10L646.8000000000001,-12L651,-12L655.2,-12L659.4,18L663.6,18L667.8000000000001,18L672,18L676.2,16L680.4000000000001,16L684.6,16L688.8000000000001,16L693,16L697.2,16L701.4,14L705.6,14L709.8,14L714,14L718.1999999999999,14L722.4,14L726.6,14L730.8,14L735,12L739.2,12L743.4,12L747.6,12L751.8000000000001,12L756,12L760.2,12L764.4,10L768.6,10L772.8000000000001,10L777,10L781.2,10L785.4000000000001,10L789.6,10L793.8000000000001,7.999999999999998L798,7.999999999999998L802.2,7.999999999999998L806.4,7.999999999999998L810.6,7.999999999999998L814.8,5.999999999999998L819,5.999999999999998L823.1999999999999,5.999999999999998L827.4,5.999999999999998L831.6,5.999999999999998L835.8,5.999999999999998L835.8,25L0,25L0,5.999999999999998&quot;&gt;&lt;&#x2F;path&gt;
        &lt;path class=&quot;chartline&quot; d=&quot;M0,5.999999999999998L4.2,5.999999999999998L8.4,5.999999999999998L12.6,5.999999999999998L16.8,5.999999999999998L21,5.999999999999998L25.2,4L29.400000000000002,4L33.6,4L37.8,4L42,4L46.2,4L50.4,2L54.6,2L58.800000000000004,2L63,2L67.2,2L71.4,2L75.6,0L79.8,0L84,0L88.2,0L92.4,0L96.60000000000001,0L100.8,-2L105,-2L109.2,-2L113.4,-2L117.60000000000001,-2L121.8,-2L126,-2L130.2,-4.0000000000000036L134.4,-4.0000000000000036L138.6,-4.0000000000000036L142.8,-4.0000000000000036L147,-4.0000000000000036L151.2,-6L155.4,-6L159.6,-6L163.8,-6L168,-6L172.20000000000002,-6L176.4,-6L180.6,-8.000000000000004L184.8,-8.000000000000004L189,-8.000000000000004L193.20000000000002,-8.000000000000004L197.4,-8.000000000000004L201.6,-8.000000000000004L205.79999999999998,-8.000000000000004L210,-10L214.20000000000002,-10L218.4,-10L222.60000000000002,-10L226.8,-10L231.00000000000003,-10L235.20000000000002,-10L239.40000000000003,-12L243.6,-12L247.79999999999998,-12L252,-12L256.2,-12L260.4,18L264.6,18L268.8,18L273,18L277.2,16L281.40000000000003,16L285.6,16L289.8,16L294,16L298.2,16L302.4,16L306.59999999999997,14L310.8,14L315,14L319.2,14L323.40000000000003,14L327.6,12L331.8,12L336,12L340.20000000000005,12L344.40000000000003,12L348.6,12L352.8,10L357,10L361.2,10L365.4,10L369.6,10L373.8,10L378,10L382.2,7.999999999999998L386.40000000000003,7.999999999999998L390.6,7.999999999999998L394.8,7.999999999999998L399,7.999999999999998L403.2,5.999999999999998L407.4,5.999999999999998L411.59999999999997,5.999999999999998L415.8,5.999999999999998L420,5.999999999999998L424.2,5.999999999999998L428.40000000000003,5.999999999999998L432.6,4L436.8,4L441,4L445.20000000000005,4L449.40000000000003,4L453.6,4L457.8,4L462.00000000000006,2L466.20000000000005,2L470.40000000000003,2L474.6,2L478.80000000000007,2L483.00000000000006,2L487.2,0L491.4,0L495.59999999999997,0L499.79999999999995,0L504,0L508.2,0L512.4,0L516.6,-2L520.8,-2L525,-2L529.2,-2L533.4,-2L537.6,-2L541.8000000000001,-4.0000000000000036L546,-4.0000000000000036L550.2,-4.0000000000000036L554.4,-4.0000000000000036L558.6,-4.0000000000000036L562.8000000000001,-4.0000000000000036L567,-4.0000000000000036L571.2,-6L575.4000000000001,-6L579.6,-6L583.8000000000001,-6L588,-6L592.1999999999999,-8.000000000000004L596.4,-8.000000000000004L600.6,-8.000000000000004L604.8,-8.000000000000004L609,-8.000000000000004L613.1999999999999,-8.000000000000004L617.4,-8.000000000000004L621.6,-10L625.8,-10L630,-10L634.2,-10L638.4,-10L642.6,-10L646.8000000000001,-12L651,-12L655.2,-12L659.4,18L663.6,18L667.8000000000001,18L672,18L676.2,16L680.4000000000001,16L684.6,16L688.8000000000001,16L693,16L697.2,16L701.4,14L705.6,14L709.8,14L714,14L718.1999999999999,14L722.4,14L726.6,14L730.8,14L735,12L739.2,12L743.4,12L747.6,12L751.8000000000001,12L756,12L760.2,12L764.4,10L768.6,10L772.8000000000001,10L777,10L781.2,10L785.4000000000001,10L789.6,10L793.8000000000001,7.999999999999998L798,7.999999999999998L802.2,7.999999999999998L806.4,7.999999999999998L810.6,7.999999999999998L814.8,5.999999999999998L819,5.999999999999998L823.1999999999999,5.999999999999998L827.4,5.999999999999998L831.6,5.999999999999998L835.8,5.999999999999998&quot;&gt;&lt;&#x2F;path&gt;
        &lt;line x1=&quot;0&quot; y1=&quot;25&quot; x2=&quot;835&quot; y2=&quot;25&quot; style=&quot;stroke: #8F8F8F;&quot;&#x2F;&gt;
        &lt;text x=&quot;2&quot; y=&quot;45&quot; font-family=&quot;Verdana&quot; font-size=&quot;15&quot; style=&quot;fill:#8F8F8F;&quot;&gt;4.6MB-6.6MB&lt;&#x2F;text&gt;
    &lt;&#x2F;g&gt;
&lt;&#x2F;svg&gt;
&lt;div class=&quot;illustration-label&quot;&gt;Memory usage using back buffer zeroing&lt;&#x2F;div&gt;
&lt;p&gt;GC events are now happening about once a second. Which can certainly still be improved upon, but it&#x27;s miles ahead of
where it was to begin with.&lt;&#x2F;p&gt;
&lt;p&gt;As a side note: it occurs to me that in order to clear the back buffer, it would be possible to do potentially much less
work than mentioned above. If we kept track of which pixels had been drawn in the previous frame, we could then clear
only those pixels which needed clearing. But I suspect that the increased overhead and complexity of such an approach
would ultimately not be worthwhile. I will leave it as an exercise to the reader to determine the feasibility of this
approach.&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
